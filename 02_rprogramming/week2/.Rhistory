pollutantmean <- function(directory, id)  {
files_list <- list.files(directory, full.names = TRUE)   #creates a list of files
dat <- data.frame() #creates an empty data frame
for (i in 1:4) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "ID"] == id),]  #subsets the rows that match the 'day' argument
mean(dat_subset[, "sulfate"], na.rm = TRUE)
}
pollutantmean(directory = "spec_data", id = 1:4)
pollutantmean("spec_data", 4)
pollutantmean("spec_data", 3)
#url for practice https://github.com/rdpeng/practice_assignment/blob/master/practice_assignment.rmdgetwd()
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view files in the dataset
list.files("diet_data")
#view contents of files
andy <- read.csv("diet_data/Andy.csv")
head(andy)
#determine the rows in set
length(andy$Day)
#observe the dimensions in the set
dim(andy) #30 rows and 4 columns
#get a quick overview of the data
str(andy)
summary(andy)
names(andy)
#check the dimensions of all data to see if they fit
#look at Andy's starting weight
andy[1, "Weight"]
#look at Andy's final weight
andy[30, "Weight"]
#other methods for looking at final weight
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
#or use subset()
subset(andy$Weight, andy$Day==30)
#assignment of starting and ending weight vectors
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
#track and print how much weight Andy lost
andy_loss <- andy_start - andy_end
andy_loss
#back to the data - stored in alpha order - we will put it in a variable
files <- list.files("diet_data")
files
#subset files bc we know they are in alphabetical order
files[1]
files[2]
files[3:5]
#look at John's data
#head(read.csv(files[3])) returns an error so we edit the code
#edited
files_full <- list.files("diet_data", full.names=TRUE)
files_full
#now try looking at John again
head(read.csv(files_full[3]))
#now we make a massive frame with rbind and a loop
andy_david <- rbind(andy, read.csv(files_full[2]))
#check the code
head(andy_david)
tail(andy_david)
#observe the 25th day for Andy and David
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
#now we build the loop - test - we will run this through all the data
for (i in 1:5) {print(i)}
#apply the loop to all our files - error - can't rbind() something that DNE
#for (i in 1:5) {
#      dat <- rbind(dat, read.csv(files_full[i]))
#}
#therefore, we create an empty data frame
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
#note, dat cannot go inside the loop bc we will only be returned the last file
#now we find the median weight of the entire "dat" frame
median(dat$Weight)
#woah! we had an na...... have to fix that
#problem. solved.
median(dat$Weight, na.rm = TRUE)
#find the median weight of day 30
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight, na.rm = TRUE)
#build a function that will return a median weight on a given day
#weightmedian <- function(directory, day) { # content of the function }
#need to put the data in one frame - use list.file() and rbind()
#run loop through
weightmedian <- function(directory, day)  {
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()                             #creates an empty data frame
for (i in 1:5) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day),]  #subsets the rows that match the 'day' argument
median(dat_subset[, "Weight"], na.rm=TRUE)      #identifies the median weight
#while stripping out the NAs
}
#test for above
weightmedian(directory = "diet_data", day = 20)
weightmedian("diet_data", 4)
weightmedian("diet_data", 17)
#REVIEW THE LAST PORTION OF THIS EXAMPLE FOR MORE SOPHISTICATED APPROACH
pollutantmean <- function(directory, id)  {
files_list <- list.files(directory, full.names = TRUE)   #creates a list of files
dat <- data.frame() #creates an empty data frame
for (i in 1:4) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
mean(dat_subset[, "sulfate"], na.rm = TRUE)
dat_subset <- dat[which(dat[, "ID"] == id),]  #subsets the rows that match the 'day' argument
}
pollutantmean(directory = "spec_data", id = 1:4)
pollutantmean("spec_data", 4)
pollutantmean("spec_data", 3)
pollutantmean <- function(directory, id)  {
files_list <- list.files(directory, full.names = TRUE)   #creates a list of files
dat <- data.frame() #creates an empty data frame
for (i in 1:4) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "ID"] == id),]  #subsets the rows that match the 'day' argument
mean(dat_subset[, "sulfate"], na.rm = TRUE)
}
pollutantmean(directory = "spec_data", id = 1:4)
pollutantmean("spec_data", 4)
pollutantmean("spec_data", 3)
?list.files
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view files in the dataset
list.files("spec_data")
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view full file names in data set
files_full <- list.files("spec_data", full.names=TRUE)
files_full
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view full file names in data set
files_full <- list.files("spec_data", full.names=TRUE)
files_full
#create an empty list that stores length of output
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
for (i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view full file names in data set
files_full <- list.files("spec_data", full.names=TRUE)
files_full
#create an empty list that stores length of output
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
#read the csv files into the list
#each element of the list is a dataframe with one csv
#for (i in seq_along(files_full)) {
#      tmp[[i]] <- read.csv(files_full[[i]])
#}
#str(tmp)
#or use lapply
str(lapply(files_full, read.csv))
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view full file names in data set
files_full <- list.files("spec_data", full.names=TRUE)
files_full
#create an empty list that stores length of output
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
#read the csv files into the list
#each element of the list is a dataframe with one csv
for (i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
#or use lapply
#str(lapply(files_full, read.csv))
#create a single data frame with do.call()
#do.call(function_you_want_to_use, list_of_arguments)
output <- do.call(rbind, tmp)
str(output)
output
pollutantmean <-function(directory) {
files_list <- list.files(directory, full.names = TRUE)
}
pollutantmean("spec_data")
output[1,1]
ouput[,1]
output[,1]
output
?mean
output[,"sulfate"]
pollutantmean <-function(directory, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant = "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean("spec_data", "sulfate")
pollutantmean("spec_data", "nitrate")
pollutantmean <-function(directory, pollutant, id) {
files_list <- list.files(directory, full.names = TRUE)
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
output_subset <- output[which(output[, "ID"] == id),]
}
pollutantmean("spec_data", "sulfate", 1:10)
pollutantmean("spec_data", "sulfate", 1)
pollutantmean("spec_data", "sulfate", 2)
pollutantmean("spec_data", "sulfate")
pollutantmean <-function(directory, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, pollutant, id) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean()
pollutantmean <-function(directory, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean("spec_data", "nitrate")
pollutantmean <-function(directory, id) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
#      if(pollutant == "sulfate") {
#            mean(output[,"sulfate"], na.rm = TRUE)
#       } else if(pollutant == "nitrate") {
#            mean(output[,"nitrate"], na.rm = TRUE)
#      }
}
pollutantmean("spec_data", 2)
pollutantmean <-function(directory, id, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean("spec_data", 3, "sulfate")
pollutantmean("spec_data", 3:10, "sulfate")
pollutantmean("spec_data", 10, "sulfate")
pollutantmean("spec_data", 1, "sulfate")
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean(directory = "spec_data", id = 2, pollutant = "nitrate")
pollutantmean(directory = "spec_data", id = 24, pollutant = "nitrate")
weightmedian <- function(directory, day)  {
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()                             #creates an empty data frame
for (i in 1:5) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day),]  #subsets the rows that match the 'day' argument
median(dat_subset[, "Weight"], na.rm=TRUE)      #identifies the median weight
#while stripping out the NAs
}
#test for above
weightmedian(directory = "diet_data", day = 20)
weightmedian("diet_data", 4)
weightmedian("diet_data", 17)
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean("spec_data", 1, "nitrate")
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view full file names in data set
files_full <- list.files("spec_data", full.names=TRUE)
files_full
#create an empty list that stores length of output
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
#read the csv files into the list
#each element of the list is a dataframe with one csv
for (i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
#or use lapply
#str(lapply(files_full, read.csv))
#create a single data frame with do.call()
#do.call(function_you_want_to_use, list_of_arguments)
output <- do.call(rbind, tmp)
str(output)
#now the data frame is store as output - time to write the function
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean("spec_data", 1, "nitrate")
pollutantmean("spec_data", 1:10, "nitrate")
pollutantmean("spec_data", 1:10, "nitrate")
pollutantmean("spec_data", 23, "nitrate")
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output["ID",] == id = 1:332),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output["ID",] == id = 1:332),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id = 1:332),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id = 1:332),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
pollutantmean <-function(directory, id = 1:332, pollutant) {
files_list <- list.files(directory, full.names = TRUE)
output_subset <- output[which(output[, "ID"] == id),]
if(pollutant == "sulfate") {
mean(output_subset[,"sulfate"], na.rm = TRUE)
} else if(pollutant == "nitrate") {
mean(output_subset[,"nitrate"], na.rm = TRUE)
}
}
?pollutantmean
??pollutantmean
pollutantmean("spec_data", 23, "nitrate")
#url for practice https://github.com/rdpeng/practice_assignment/blob/master/practice_assignment.rmdgetwd()
#store dataset in the desired location and move to that location
getwd()
setwd("/Users/johnkoretoff/datascience/jhudss/02_rprogramming/week2")
#view files in the dataset
list.files("diet_data")
#view contents of files
andy <- read.csv("diet_data/Andy.csv")
head(andy)
#determine the rows in set
length(andy$Day)
#observe the dimensions in the set
dim(andy) #30 rows and 4 columns
#get a quick overview of the data
str(andy)
summary(andy)
names(andy)
#check the dimensions of all data to see if they fit
#look at Andy's starting weight
andy[1, "Weight"]
#look at Andy's final weight
andy[30, "Weight"]
#other methods for looking at final weight
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
#or use subset()
subset(andy$Weight, andy$Day==30)
#assignment of starting and ending weight vectors
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
#track and print how much weight Andy lost
andy_loss <- andy_start - andy_end
andy_loss
#back to the data - stored in alpha order - we will put it in a variable
files <- list.files("diet_data")
files
#subset files bc we know they are in alphabetical order
files[1]
files[2]
files[3:5]
#look at John's data
#head(read.csv(files[3])) returns an error so we edit the code
#edited
files_full <- list.files("diet_data", full.names=TRUE)
files_full
#now try looking at John again
head(read.csv(files_full[3]))
#now we make a massive frame with rbind and a loop
andy_david <- rbind(andy, read.csv(files_full[2]))
#check the code
head(andy_david)
tail(andy_david)
#observe the 25th day for Andy and David
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
#now we build the loop - test - we will run this through all the data
for (i in 1:5) {print(i)}
#apply the loop to all our files - error - can't rbind() something that DNE
#for (i in 1:5) {
#      dat <- rbind(dat, read.csv(files_full[i]))
#}
#therefore, we create an empty data frame
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
#note, dat cannot go inside the loop bc we will only be returned the last file
#now we find the median weight of the entire "dat" frame
median(dat$Weight)
#woah! we had an na...... have to fix that
#problem. solved.
median(dat$Weight, na.rm = TRUE)
#find the median weight of day 30
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight, na.rm = TRUE)
#build a function that will return a median weight on a given day
#weightmedian <- function(directory, day) { # content of the function }
#need to put the data in one frame - use list.file() and rbind()
#run loop through
weightmedian <- function(directory, day)  {
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()                             #creates an empty data frame
for (i in 1:5) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day),]  #subsets the rows that match the 'day' argument
median(dat_subset[, "Weight"], na.rm=TRUE)      #identifies the median weight
#while stripping out the NAs
}
#test for above
weightmedian(directory = "diet_data", day = 20)
weightmedian("diet_data", 4)
weightmedian("diet_data", 17)
weightmedian("diet_data", 17:30)
